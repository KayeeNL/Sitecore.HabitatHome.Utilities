Param(
    [string] $configurationFile = "configuration-xp0.json"
)

# Replace the values in this file with your installation Overrides
# all objects in the install-settings.json file can be overridden in this file

# You can remove any items that you do not need to override. Keep in mind the dependency on other settings when removing items.
# For example, $assets is used in various sections.

Write-Host "Setting Local Overrides in $configurationFile"

$json = Get-Content -Raw $configurationFile |  ConvertFrom-Json

# Assets and prerequisites
$assets = $json.assets
$assets.psRepository = "http://nuget1ca2/nuget/Sitecore_Gallery"
$assets.psRepositoryName = "SitecoreGallery_Internal"
$assets.installerVersion = "2.0.0"
$assets.licenseFilePath = Join-Path $assets.root "license.xml"

# Settings

# Site Settings
$site = $json.settings.site
$site.prefix = "habitathome"
$site.suffix = "dev.local"
$site.webroot = "C:\inetpub\wwwroot"
$site.hostName = $json.settings.site.prefix + "." + $json.settings.site.suffix

# Sitecore Parameters
$sitecore = $json.settings.sitecore
$sitecore.adminPassword = "b"
$sitecore.exmCryptographicKey = "0x0000000000000000000000000000000000000000000000000000000000000000"
$sitecore.exmAuthenticationKey = "0x0000000000000000000000000000000000000000000000000000000000000000"
$sitecore.telerikEncryptionKey = "PutYourCustomEncryptionKeyHereFrom32To256CharactersLong"

# Solr Parameters
$solr = $json.settings.solr
$solr.url = "https://localhost:8721/solr"
$solr.root = "c:\solr\solr-7.2.1"
$solr.serviceName = "Solr-7.2.1"

# SQL Settings
$sql = $json.settings.sql

$SqlStrongPassword = "Str0NgPA33w0rd!!" # Used for all other services

$sql.server = "."
$sql.adminUser = "sa"
$sql.adminPassword = $SqlStrongPassword
$sql.userPassword = $SqlStrongPassword
$sql.coreUser =  "coreuser"
$sql.corePassword = $SqlStrongPassword
$sql.masterUser =  "masteruser"
$sql.masterPassword = $SqlStrongPassword
$sql.webUser =  "webuser"
$sql.webPassword = $SqlStrongPassword
$sql.collectionUser =  "collectionuser"
$sql.collectionPassword = $SqlStrongPassword
$sql.reportingUser =  "reportinguser"
$sql.reportingPassword = $SqlStrongPassword
$sql.processingPoolsUser =  "poolsuser"
$sql.processingPoolsPassword = $SqlStrongPassword
$sql.processingTasksUser =  "tasksuser"
$sql.processingTasksPassword = $SqlStrongPassword
$sql.referenceDataUser =  "referencedatauser"
$sql.referenceDataPassword = $SqlStrongPassword
$sql.marketingAutomationUser =  "marketingautomationuser"
$sql.marketingAutomationPassword = $SqlStrongPassword
$sql.formsUser =  "formsuser"
$sql.formsPassword = $SqlStrongPassword
$sql.exmMasterUser =  "exmmasteruser"
$sql.exmMasterPassword = $SqlStrongPassword
$sql.messagingUser =  "messaginguser"
$sql.messagingPassword = $SqlStrongPassword
$sql.securityuser =  "securityuser"
$sql.securityPassword = $SqlStrongPassword
# XConnect Parameters
$xConnect = $json.settings.xConnect
$xConnect.siteName = $site.prefix + "_xconnect." + $site.suffix
$xConnect.certificateName = [string]::Join(".", @($site.prefix, $site.suffix, "xConnect.Client"))
$xConnect.siteRoot = Join-Path $site.webRoot -ChildPath $xConnect.siteName

Set-Content $configurationFile  (ConvertTo-Json -InputObject $json -Depth 6)